from fastapi import Depends, HTTPException, status
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
from jose import jwt, JWTError
from dj_core_utils.settings.base import get_settings
from pydantic import BaseModel

security = HTTPBearer()


class UserPayload(BaseModel):
    id: int
    email: str
    is_staff: bool


async def jwt_auth(
    credentials: HTTPAuthorizationCredentials = Depends(security)
) -> UserPayload:
    """
    Validates JWT tokens generated by Django
    Requires:
        - python-jose
        - Same SECRET_KEY and ALGORITHM as Django
    """
    settings = get_settings()

    try:
        token = credentials.credentials
        payload = jwt.decode(
            token,
            settings.SECRET_KEY,
            algorithms=[settings.SIMPLE_JWT.get('ALGORITHM', 'HS256')]
        )

        return UserPayload(
            id=payload['user_id'],
            email=payload.get('email', ''),
            is_staff=payload.get('is_staff', False)
        )
    except JWTError:
        raise HTTPException(
            status_code=status.HTTP_401_UNAUTHORIZED,
            detail='Invalid authentication credentials',
            headers={'WWW-Authenticate': 'Bearer'},
        )
